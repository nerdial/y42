<?phpuse PHPUnit\Framework\TestCase;use App\Interface\StorageInterface;use App\Storage\FileStorage;class FileStorageTest extends TestCase{    private StorageInterface $storage;    private string $filename = 'cache/database_test.json';    protected function setUp(): void    {        parent::setUp();        $this->storage = new FileStorage($this->filename);    }    public function testOpenFile(): void    {        $this->storage->open();        $this->assertTrue(file_exists($this->filename));    }    public function testSaveData(): void    {        $text = 'this is a simple text for our test';        $result = $this->storage->save($text);        $actual = file_get_contents($this->filename);        $this->assertTrue($result);        $this->assertTrue(file_exists($this->filename));        $this->assertEquals($text, $actual);    }    public function testGetContent(): void    {        $text = 'this is a simple text for our test';        $this->storage->save($text);        $content = $this->storage->getContent();        $this->assertTrue(file_exists($this->filename));        $this->assertEquals($text, $content);    }    public function testFlushAFile(): void    {        $text = 'this is a simple text for our test';        $this->storage->save($text);        $this->storage->flush();        $content = $this->storage->getContent();        $this->assertTrue(file_exists($this->filename));        $this->assertEmpty($content);    }    protected function tearDown(): void    {        parent::tearDown();        unlink($this->filename);    }}